/**\n * Listing Type Multi-Select Enhancer\n * Enhances ItemGroup and ReviewGroup JSON fields with multi-select UI\n */\n\n// Component data với Vietnamese labels\nconst COMPONENTS = {\n  'contact': {\n    'Social': 'Mạng xã hội',\n    'Email': 'Email',\n    'Phone': 'Điện thoại',\n    'Address': 'Địa chỉ',\n    'Website': 'Website'\n  },\n  'violation': {\n    'ViolationType': 'Loại vi phạm',\n    'ViolationDetail': 'Chi tiết vi phạm',\n    'Evidence': 'Bằng chứng',\n    'Impact': 'Tác động'\n  },\n  'review': {\n    'Rating': 'Đánh giá',\n    'Comment': 'Bình luận',\n    'Recommendation': 'Khuyến nghị',\n    'Experience': 'Trải nghiệm'\n  },\n  'elements': {\n    'Button': 'Nút bấm',\n    'Link': 'Liên kết',\n    'Image': 'Hình ảnh',\n    'Text': 'Văn bản'\n  }\n};\n\n// Create multi-select UI\nfunction createMultiSelectUI(fieldName, currentValue) {\n  const container = document.createElement('div');\n  container.className = 'multi-select-container';\n  container.style.cssText = `\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    padding: 12px;\n    margin: 8px 0;\n    background: #f9f9f9;\n  `;\n\n  const title = document.createElement('h4');\n  title.textContent = `${fieldName} - Multi-Select Components`;\n  title.style.cssText = 'margin: 0 0 12px 0; color: #333;';\n  container.appendChild(title);\n\n  const selected = new Set(currentValue || []);\n\n  Object.entries(COMPONENTS).forEach(([category, components]) => {\n    const categoryDiv = document.createElement('div');\n    categoryDiv.style.marginBottom = '16px';\n\n    const categoryLabel = document.createElement('h5');\n    categoryLabel.textContent = category.toUpperCase();\n    categoryLabel.style.cssText = 'margin: 0 0 8px 0; color: #666; font-size: 12px;';\n    categoryDiv.appendChild(categoryLabel);\n\n    Object.entries(components).forEach(([key, label]) => {\n      const checkbox = document.createElement('input');\n      checkbox.type = 'checkbox';\n      checkbox.id = `${fieldName}-${key}`;\n      checkbox.checked = selected.has(key);\n      checkbox.style.marginRight = '8px';\n\n      const checkboxLabel = document.createElement('label');\n      checkboxLabel.htmlFor = checkbox.id;\n      checkboxLabel.textContent = `${key} (${label})`;\n      checkboxLabel.style.cssText = 'display: inline-block; margin-right: 16px; cursor: pointer;';\n\n      const wrapper = document.createElement('div');\n      wrapper.style.display = 'inline-block';\n      wrapper.appendChild(checkbox);\n      wrapper.appendChild(checkboxLabel);\n      categoryDiv.appendChild(wrapper);\n\n      checkbox.addEventListener('change', () => {\n        if (checkbox.checked) {\n          selected.add(key);\n        } else {\n          selected.delete(key);\n        }\n        updateJSONField(fieldName, Array.from(selected));\n      });\n    });\n\n    container.appendChild(categoryDiv);\n  });\n\n  return container;\n}\n\n// Update JSON field\nfunction updateJSONField(fieldName, selectedComponents) {\n  const jsonField = document.querySelector(`[name=\"${fieldName}\"]`);\n  if (jsonField) {\n    jsonField.value = JSON.stringify(selectedComponents, null, 2);\n    // Trigger change event\n    jsonField.dispatchEvent(new Event('input', { bubbles: true }));\n  }\n}\n\n// Parse JSON value\nfunction parseJSONValue(value) {\n  try {\n    return JSON.parse(value || '[]');\n  } catch {\n    return [];\n  }\n}\n\n// Initialize enhancer\nfunction initializeEnhancer() {\n  console.log('🎨 Listing Type Enhancer: Initializing...');\n\n  // Target JSON fields\n  const targetFields = ['ItemGroup', 'ReviewGroup'];\n\n  targetFields.forEach(fieldName => {\n    const jsonField = document.querySelector(`[name=\"${fieldName}\"]`);\n    if (jsonField) {\n      console.log(`✅ Found ${fieldName} field, enhancing...`);\n      \n      const currentValue = parseJSONValue(jsonField.value);\n      const multiSelectUI = createMultiSelectUI(fieldName, currentValue);\n      \n      // Insert before JSON field\n      jsonField.parentNode.insertBefore(multiSelectUI, jsonField);\n      \n      // Hide JSON field but keep it functional\n      jsonField.style.display = 'none';\n    }\n  });\n}\n\n// Wait for DOM and run\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', () => {\n    setTimeout(initializeEnhancer, 1000);\n  });\n} else {\n  setTimeout(initializeEnhancer, 1000);\n}\n\n// Re-run on navigation (SPA)\nlet currentURL = location.href;\nsetInterval(() => {\n  if (location.href !== currentURL) {\n    currentURL = location.href;\n    setTimeout(initializeEnhancer, 1500);\n  }\n}, 1000); 