const { test, expect } = require('@playwright/test');

test('Debug Seller ItemField trong database', async ({ page }) => {
  test.setTimeout(60000); // TƒÉng timeout l√™n 60 gi√¢y
  
  console.log('üîç B·∫Øt ƒë·∫ßu debug ItemField c·ªßa Seller...');
  
  // ƒêƒÉng nh·∫≠p v√†o Strapi admin
  console.log('üîê ƒêang ƒëƒÉng nh·∫≠p...');
  await page.goto('http://localhost:1337/admin/auth/login');
  
  // ƒê·ª£i trang load
  await page.waitForLoadState('networkidle');
  
  await page.fill('input[name="email"]', 'admin@ratebox.vn');
  await page.fill('input[name="password"]', 'Abc@123456');
  await page.click('button[type="submit"]');
  
  // ƒê·ª£i redirect v·ªõi timeout d√†i h∆°n
  try {
    await page.waitForURL('**/admin', { timeout: 30000 });
    console.log('‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng');
  } catch (error) {
    console.log('‚ùå Login timeout, th·ª≠ ki·ªÉm tra URL hi·ªán t·∫°i...');
    console.log('Current URL:', page.url());
    
    // N·∫øu ƒë√£ ·ªü admin page th√¨ ti·∫øp t·ª•c
    if (page.url().includes('/admin')) {
      console.log('‚úÖ ƒê√£ ·ªü admin page, ti·∫øp t·ª•c...');
    } else {
      throw error;
    }
  }
  
  // Ki·ªÉm tra API tr·ª±c ti·∫øp cho Seller (ID: 22)
  console.log('üì° Ki·ªÉm tra API cho Seller (ID: 22)...');
  
  const apiResponse = await page.request.get('http://localhost:1337/api/smart-component-filter/listing-type/22/components');
  const apiData = await apiResponse.json();
  
  console.log('üì¶ API Response Status:', apiResponse.status());
  console.log('üì¶ API Response Data:', JSON.stringify(apiData, null, 2));
  
  // Ki·ªÉm tra d·ªØ li·ªáu th√¥ c·ªßa Seller t·ª´ database
  console.log('üîç Ki·ªÉm tra d·ªØ li·ªáu th√¥ c·ªßa Seller t·ª´ database...');
  
  const sellerResponse = await page.request.get('http://localhost:1337/api/listing-types/22?fields=id,Name,ItemField');
  const sellerData = await sellerResponse.json();
  
  console.log('üì¶ Seller Database Data:', JSON.stringify(sellerData, null, 2));
  
  // So s√°nh v·ªõi Bank (ID: 7) ƒë·ªÉ th·∫•y s·ª± kh√°c bi·ªát
  console.log('üîç So s√°nh v·ªõi Bank (ID: 7)...');
  
  const bankResponse = await page.request.get('http://localhost:1337/api/listing-types/7?fields=id,Name,ItemField');
  const bankData = await bankResponse.json();
  
  console.log('üì¶ Bank Database Data:', JSON.stringify(bankData, null, 2));
  
  // Ki·ªÉm tra t·∫•t c·∫£ ListingTypes ƒë·ªÉ th·∫•y pattern
  console.log('üîç Ki·ªÉm tra t·∫•t c·∫£ ListingTypes...');
  
  const allResponse = await page.request.get('http://localhost:1337/api/listing-types?fields=id,Name,ItemField&pagination[limit]=25');
  const allData = await allResponse.json();
  
  console.log('üì¶ All ListingTypes:');
  allData.data.forEach(item => {
    console.log(`  - ID: ${item.id}, Name: ${item.Name}, ItemField: ${JSON.stringify(item.ItemField)}`);
  });
  
  // Ki·ªÉm tra xem c√≥ ListingType n√†o c√≥ ItemField kh√¥ng null
  const withItemField = allData.data.filter(item => item.ItemField !== null && item.ItemField !== undefined);
  console.log(`üìä ListingTypes c√≥ ItemField: ${withItemField.length}/${allData.data.length}`);
  
  withItemField.forEach(item => {
    console.log(`  ‚úÖ ${item.Name} (ID: ${item.id}): ${JSON.stringify(item.ItemField)}`);
  });
  
  const withoutItemField = allData.data.filter(item => item.ItemField === null || item.ItemField === undefined);
  console.log(`üìä ListingTypes kh√¥ng c√≥ ItemField: ${withoutItemField.length}/${allData.data.length}`);
  
  withoutItemField.forEach(item => {
    console.log(`  ‚ùå ${item.Name} (ID: ${item.id}): ${JSON.stringify(item.ItemField)}`);
  });
}); 